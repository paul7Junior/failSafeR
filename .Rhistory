meta_current
meta_var
var
raw
raw %>%
select(var, status)
raw %>%
select(var, status) %>%
filter_class(var, target_class)
target_class
target_class = 'numeric'
raw %>%
select(var, status) %>%
filter_class(var, target_class)
raw %>%
select(var, status) %>%
filter_class(var, target_class) $a
raw %>%
select(var, status) %>%
filter_class(var, target_class)
.Last.value$a
meta_length = function(data) {
if(is.null(data)) return(data.frame())
data %>% mutate_at(1, function(x) length(x)) %>% ungroup()
}
a = meta_factory(d, NULL, meta_operation = meta_length) # numeric sign
a
a$meta
d
data = raw %>%
select(var, status) %>%
filter_class(var, target_class)
data
data %>% mutate_at(1, function(x) length(x)) %>% ungroup()
data %>% rowwise() %>% mutate_at(1, function(x) length(x)) %>% ungroup()
meta_length = function(data) {
if(is.null(data)) return(data.frame())
data %>% rowwise() %>% mutate_at(1, function(x) length(x)) %>% ungroup()
}
a = meta_factory(d, NULL, meta_operation = meta_length) # numeric sign
a
a$meta
d
arg_length = meta_factory(d, 'character', meta_operation = meta_length) %>% meta_proba() %>% rename('character_distinct' = 'meta')
arg_length
arg_length = meta_factory(d, NULL, meta_operation = meta_length) %>% meta_proba() %>% rename('character_distinct' = 'meta')
arg_length
arg_length$character_distinct
d
meta_factory(d, NULL, meta_operation = meta_length)
meta_factory(d, NULL, meta_operation = meta_length)$meta
meta_factory(d, NULL, meta_operation = meta_length) %>% meta_proba()
a = meta_factory(d, NULL, meta_operation = meta_length) %>% meta_proba()
a$meta
meta
.meta_factory = meta_factory(d, NULL, meta_operation = meta_length)
.meta_factory
.meta_factory
.meta_factory$meta
.meta_factory
.meta_factory %>%
mutate(meta = pimp_contingency(meta))
a = .meta_factory %>%
mutate(meta = pimp_contingency(meta))
a$meta
.meta_factory
.meta_factory$meta
.meta_factory %>%
mutate(meta = pimp_contingency(meta))
a = .meta_factory %>%
mutate(meta = pimp_contingency(meta))
a$meta
arg_length = meta_factory(d, NULL, meta_operation = meta_length) %>% meta_proba() %>% rename('character_distinct' = 'meta')
arg_length
arg_length$character_distinct
arg_length = meta_factory(d, NULL, meta_operation = meta_length) %>% meta_proba() %>% rename('length' = 'meta')
arg_length
meta_current
data
data %>% rowwise() %>% mutate_at(1, function(x) dim(x)) %>% ungroup()
data %>% rowwise() %>% mutate_at(1, function(x) dim(x))
data %>% rowwise() %>% mutate_at(1, function(x) list(dim(x)))
arg_length
arg_length = meta_factory(d, NULL, meta_operation = meta_length) %>% meta_proba() %>% rename('length' = 'meta')
data
data %>% rowwise() %>% mutate_at(1, function(x) list(dim(x))) %>% ungroup()
data %>% rowwise() %>% mutate_at(1, function(x) length(x)) %>% ungroup()
data %>% rowwise() %>% mutate_at(1, function(x) list(dim(x))) %>% ungroup()
.Last.value$a
data %>% rowwise() %>% mutate_at(1, function(x) length(x)) %>% ungroup()
data %>% rowwise() %>% mutate_at(1, function(x) dim(x)) %>% ungroup()
data
as.null(3)
as.null('NULL')
as.null.numeric(4)
arg_dim = meta_factory(d, NULL, meta_operation = meta_dim) %>% meta_proba() %>% rename('dim' = 'meta')
data
NULL
class(NULL)
as.null(list(a = 1, b = "c"))
list(NULL)
is.null(list(NULL))
df2 <- data.frame(v1=NULL, v2=NULL, v3=NULL)
df2
a = 'NULL2'
class(a) <- NULL
a
class(a)
?class
class(a) <- "NULL"
a
class(a)
class(NULL)
NULL_mc = 'NULL_MC'
class(NULL_mc) = 'NULL'
NULL_mc
NULL_mc
class(NULL_mc)
is.null(NULL_mc)
?is.null
class(NULL_mc)
class(NULL_mc) == 'NULL'
is.null
meta_current
meta_dim = function(data) {
if(is.null(data)) return(data.frame())
data %>% rowwise() %>% mutate_at(1, function(x) list(dim(x))) %>% ungroup()
}
arg_dim = meta_factory(d, NULL, meta_operation = meta_dim) %>% meta_proba() %>% rename('dim' = 'meta')
meta_dim
meta_factory(d, NULL, meta_operation = meta_dim)
data %>% rowwise() %>% mutate_at(1, function(x) list(dim(x))) %>% ungroup()
raw
meta_operation = meta_din
meta_operation = meta_dim
raw %>%
select(var, status)
raw %>%
select(var, status) %>%
filter_class(var, target_class)
target_class
raw %>%
select(var, status) %>%
filter_class(var, target_class) %>%
meta_operation()
raw %>%
select(var, status) %>%
filter_class(var, target_class) %>%
meta_operation() %>%
mutate_all(function(x) return(unlist(x)))
meta_var
meta_var$class
meta_var$numeric_sign
meta_var
meta_dim = function(data) {
if(is.null(data)) return(data.frame())
data %>% rowwise() %>% mutate_at(1, function(x) if(is.null(dim(x))) NA else dim(x)) %>% ungroup()
}
arg_dim = meta_factory(d, NULL, meta_operation = meta_dim) %>% meta_proba() %>% rename('dim' = 'meta')
data %>% rowwise() %>% mutate_at(1, function(x) if(is.null(dim(x))) NA else dim(x)) %>% ungroup()
meta_factory(d, NULL, meta_operation = meta_dim)
meta_factory(d, NULL, meta_operation = meta_dim)$meta
meta_factory(d, NULL, meta_operation = meta_dim)
meta_factory(d, NULL, meta_operation = meta_dim)$meta
meta_factory(d, NULL, meta_operation = meta_dim) %>% meta_proba()
.meta_factory = meta_factory(d, NULL, meta_operation = meta_dim)
.meta_factory
.meta_factory %>%
mutate(meta = pimp_contingency(meta))
.Last.value$meta
.meta_factory %>%
mutate(meta = pimp_contingency(meta)) %>%
mutate(meta = map(meta, ~ filter(., status == 1)))
.meta_factory %>%
mutate(meta = pimp_contingency(meta))
.meta_factory %>%
mutate(meta = pimp_contingency(meta))$meta
.meta_factory %>%
mutate(meta = pimp_contingency(meta))
.Last.value$meta
.meta_factory
.meta_factory$meta
dim(data.frame())
nrow(3)
nrow("3")
.meta_factory
meta_dim = function(data) {
if(is.null(data)) return(data.frame())
data %>% rowwise() %>% mutate_at(1, function(x) if(is.null(dim(x))) 'NA' else dim(x)) %>% ungroup()
}
arg_dim = meta_factory(d, NULL, meta_operation = meta_dim) %>% meta_proba() %>% rename('dim' = 'meta')
arg_dim
arg_dim$dim
arg_dim$dim
arg_dim$dim[[1]]
arg_dim$dim[[1]]$a
class(arg_dim$dim[[1]]$a)
meta_dim = function(data) {
if(is.null(data)) return(data.frame())
data %>% rowwise() %>% mutate_at(1, function(x) if(is.null(dim(x))) 'NA_MC' else dim(x)) %>% ungroup()
}
class(NA)
?NA
class(NA_integer_)
a = NA_integer_
a
str(a)
print(a)
attr(a)
attributes(a)
class(NA)
meta_dim
arg_dim = meta_factory(d, NULL, meta_operation = meta_dim) %>% meta_proba() %>% rename('dim' = 'meta')
arg_dim
arg_dim$dim
meta_current
meta_current$dim
arg_class
arg_numeric_sign
arg_length
arg_dim
data
data %>% rowwise() %>% mutate_at(1, function(x) is.null(dim(x))) %>% ungroup()
data %>% rowwise() %>% mutate_at(1, function(x) dim(x)) %>% ungroup()
data %>% rowwise() %>% mutate_at(1, function(x) list(dim(x))) %>% ungroup()
meta_dim = function(data) {
if(is.null(data)) return(data.frame())
data %>% rowwise() %>% mutate_at(1, function(x) list(dim(x))) %>% ungroup()
# data %>% rowwise() %>% mutate_at(1, function(x) if(is.null(dim(x))) 'NA_MC' else dim(x)) %>% ungroup()
}
meta_factory(d, NULL, meta_operation = meta_dim)
raw
raw %>%
select(var, status) %>%
filter_class(var, target_class) %>%
meta_operation()
raw %>%
select(var, status) %>%
filter_class(var, target_class)
raw %>%
select(var, status) %>%
filter_class(var, target_class) %>%
meta_operation()
raw %>%
select(var, status) %>%
filter_class(var, target_class) %>%
meta_operation()
arg_dim  = raw %>%
select(var, status) %>%
filter_class(var, target_class) %>%
meta_operation()
arg_dim
raw %>%
select(var, status) %>%
filter_class(var, target_class) %>%
meta_operation() %>% meta_proba()
meta_factory = function(raw, target_class, meta_operation) {
tibble(variable = colnames(raw)[colnames(raw) != 'status'])  %>%
mutate(meta =
purrr::map(variable,
function(var) {
raw %>%
select(var, status) %>%
filter_class(var, target_class) %>%
meta_operation()
# mutate_all(funs(unlist(.))) ## warning Unknown or uninitialised column: 'get'. must come from here
})
)
}
arg_dim = meta_factory(d, NULL, meta_operation = meta_dim)
arg_dim
arg_dim$meta
meta_factory(d, NULL, meta_operation = meta_dim) %>% meta_proba()
meta_factory(d, NULL, meta_operation = meta_dim) %>% meta_proba()
.meta_factory
arg_dim
arg_dim = meta_factory(d, NULL, meta_operation = meta_dim) %>% meta_proba() %>% rename('dim' = 'meta')
#' @param raw data that lives in raw attritute of a meta_collection
#' @param class String. The class of data to use (numeric, character, data.frame, ...)
#' @param meta_operation A function. Operation to apply on those meta
#'
#' The raw data as stored in the object raw in a meta collection
meta_factory = function(raw, target_class, meta_operation) {
tibble(variable = colnames(raw)[colnames(raw) != 'status'])  %>%
mutate(meta =
purrr::map(variable,
function(var) {
raw %>%
select(var, status) %>%
filter_class(var, target_class) %>%
meta_operation() %>%
mutate_all(function(x) return(unlist(x))) ## warning Unknown or uninitialised column: 'get'. must come from here
# mutate_all(funs(unlist(.))) ## warning Unknown or uninitialised column: 'get'. must come from here
})
)
}
meta_factory(d, NULL, meta_operation = meta_dim)
list(NULL, NULL)
unlist(list(NULL, NULL))
unlist(list(NULL, 2, NULL))
raw %>%
select(var, status) %>%
filter_class(var, target_class) %>%
meta_operation()
a = raw %>%
select(var, status) %>%
filter_class(var, target_class) %>%
meta_operation()
a
a[2,1] = list(3)
a
a%>%
mutate_all(function(x) return(unlist(x)))
a
a$a
unlist(a$a)
a %>% mutate_all(function(x) return(unlist(x)))
arg_length
arg_length$length
raw
raw$c
meta_dim = function(data) {
if(is.null(data)) return(data.frame())
data %>% rowwise() %>% mutate_at(1, function(x) if(is.null(dim(x))) 'NA_MC' else dim(x)) %>% ungroup()
}
#' @param raw data that lives in raw attritute of a meta_collection
#' @param class String. The class of data to use (numeric, character, data.frame, ...)
#' @param meta_operation A function. Operation to apply on those meta
#'
#' The raw data as stored in the object raw in a meta collection
meta_factory = function(raw, target_class, meta_operation) {
tibble(variable = colnames(raw)[colnames(raw) != 'status'])  %>%
mutate(meta =
purrr::map(variable,
function(var) {
raw %>%
select(var, status) %>%
filter_class(var, target_class) %>%
meta_operation() %>%
mutate_all(function(x) return(unlist(x))) ## warning Unknown or uninitialised column: 'get'. must come from here
# mutate_all(funs(unlist(.))) ## warning Unknown or uninitialised column: 'get'. must come from here
})
)
}
arg_dim = meta_factory(d, NULL, meta_operation = meta_dim) %>% meta_proba() %>% rename('dim' = 'meta')
arg_dim
arg_dim = meta_factory(d, NULL, meta_operation = meta_dim) %>% meta_proba() %>% rename('dim' = 'meta')
arg_dim
arg_dim$dim
arg_dim
meta_var = reduce(list(arg_class, arg_length, arg_numeric_sign, arg_character_distinct, arg_dim), full_join, by = 'variable')
meta_var
meta_current
meta_var = reduce(list(arg_class, arg_length, arg_dim, arg_numeric_sign, arg_character_distinct), full_join, by = 'variable')
meta_var
meta_current
data
arg_dim = meta_factory(d, 'data.frame', meta_operation = meta_dim) %>% meta_proba() %>% rename('dim' = 'meta')
meta_dim = function(data) {
if(is.null(data)) return(data.frame())
data %>% rowwise() %>% mutate_at(1, function(x) dim(x)) %>% ungroup()
# data %>% rowwise() %>% mutate_at(1, function(x) if(is.null(dim(x))) 'NA_MC' else dim(x)) %>% ungroup()
}
meta_dim = function(data) {
if(is.null(data)) return(data.frame())
data %>% rowwise() %>% mutate_at(1, function(x) dim(x)) %>% ungroup()
# data %>% rowwise() %>% mutate_at(1, function(x) if(is.null(dim(x))) 'NA_MC' else dim(x)) %>% ungroup()
}
#' @param raw data that lives in raw attritute of a meta_collection
#' @param class String. The class of data to use (numeric, character, data.frame, ...)
#' @param meta_operation A function. Operation to apply on those meta
#'
#' The raw data as stored in the object raw in a meta collection
meta_factory = function(raw, target_class, meta_operation) {
tibble(variable = colnames(raw)[colnames(raw) != 'status'])  %>%
mutate(meta =
purrr::map(variable,
function(var) {
raw %>%
select(var, status) %>%
filter_class(var, target_class) %>%
meta_operation() %>%
mutate_all(function(x) return(unlist(x))) ## warning Unknown or uninitialised column: 'get'. must come from here
# mutate_all(funs(unlist(.))) ## warning Unknown or uninitialised column: 'get'. must come from here
})
)
}
arg_dim = meta_factory(d, 'data.frame', meta_operation = meta_dim) %>% meta_proba() %>% rename('dim' = 'meta')
arg_dim
arg_dim$dim
arg_class = meta_factory(d, NULL, meta_operation = meta_class) %>% meta_proba() %>% rename('class' = 'meta')
arg_numeric_sign = meta_factory(d, 'numeric', meta_operation = meta_numeric_sign) %>% meta_proba() %>% rename('numeric_sign' = 'meta')
arg_length = meta_factory(d, NULL, meta_operation = meta_length) %>% meta_proba() %>% rename('length' = 'meta')
arg_dim = meta_factory(d, 'data.frame', meta_operation = meta_dim) %>% meta_proba() %>% rename('dim' = 'meta')
arg_character_distinct = meta_factory(d, 'character', meta_operation = meta_character_distinct) %>% meta_proba() %>% rename('character_distinct' = 'meta')
arg_class = meta_factory(d, NULL, meta_operation = meta_class) %>% meta_proba() %>% rename('class' = 'meta')
arg_numeric_sign = meta_factory(d, 'numeric', meta_operation = meta_numeric_sign) %>% meta_proba() %>% rename('numeric_sign' = 'meta')
arg_length = meta_factory(d, NULL, meta_operation = meta_length) %>% meta_proba() %>% rename('length' = 'meta')
arg_dim = meta_factory(d, 'data.frame', meta_operation = meta_dim) %>% meta_proba() %>% rename('dim' = 'meta')
arg_character_distinct = meta_factory(d, 'character', meta_operation = meta_character_distinct) %>% meta_proba() %>% rename('character_distinct' = 'meta')
meta_var = reduce(list(arg_class, arg_length, arg_dim, arg_numeric_sign, arg_character_distinct), full_join, by = 'variable')
current = mc$get_current_env() %>% data.frame()
meta_current = tibble(variable = names(mc$get_current_env())) %>%
mutate(value = current,
class = lapply(value, class),
length = lapply(value, length),
dim = lapply(value, dim),
numeric_sign = lapply(value, function(x) if(is.numeric(x)) {
ifelse(x>0, 'Positive', 'Negative')
}),
character_distinct = lapply(value, function(x) if(is.character(x)) x else NULL)) %>%
select(-value)
meta_current
current
current
current = mc$get_current_env()
meta_current = tibble(variable = names(mc$get_current_env())) %>%
mutate(value = current,
class = lapply(value, class),
length = lapply(value, length),
dim = lapply(value, dim),
numeric_sign = lapply(value, function(x) if(is.numeric(x)) {
ifelse(x>0, 'Positive', 'Negative')
}),
character_distinct = lapply(value, function(x) if(is.character(x)) x else NULL)) %>%
select(-value)
meta_current
var
meta_var = meta_var %>% filter(variable == var)
meta_current = meta_current %>% filter(variable == var)
meta_var
meta_current
unlist(meta_current)
meta_var
unlist(meta_var)
meta_var
meta_var %>% filter(variable == var) %>% unlist()
meta_current = meta_current %>% filter(variable == var) %>% unlist()
meta_current
meta_var
meta_var$class
meta_var
meta_var %>% filter(variable == var) %>% rowwise() %>% lapply(function(x) x[1,])
meta_var %>% filter(variable == var) %>% rowwise() %>% lapply(function(x) x[1])
meta_var
meta_var
meta_current
meta_current %>% filter(variable == var)
var
meta_current = tibble(variable = names(mc$get_current_env())) %>%
mutate(value = current,
class = lapply(value, class),
length = lapply(value, length),
dim = lapply(value, dim),
numeric_sign = lapply(value, function(x) if(is.numeric(x)) {
ifelse(x>0, 'Positive', 'Negative')
}),
character_distinct = lapply(value, function(x) if(is.character(x)) x else NULL)) %>%
select(-value)
meta_current %>% filter(variable == var)
meta_var = meta_var %>% filter(variable == var)
meta_var
meta_var$class
meta_current
meta_var
names(meta_var)
names(meta_var)[-1]
meta = 'clas'
meta = 'class'
meta_var
meta_current
meta_current = meta_current %>% filter(variable == var) %>% unlist()
meta_current
meta_current = tibble(variable = names(mc$get_current_env())) %>%
mutate(value = current,
class = lapply(value, class),
length = lapply(value, length),
dim = lapply(value, dim),
numeric_sign = lapply(value, function(x) if(is.numeric(x)) {
ifelse(x>0, 'Positive', 'Negative')
}),
character_distinct = lapply(value, function(x) if(is.character(x)) x else NULL)) %>%
select(-value)
meta_current = meta_current %>% filter(variable == var) #%>% unlist()
meta_current
meta_var
meta_current
meta_var$class
meta_current$class
unlist(meta_var$class)
data.frame(meta_current$class)
meta_current$class
meta_var$class
unlist(meta_var$class)
data.frame(meta_var$class)
unlist(data.frame(meta_var$class))
data.frame(meta_var$class)
meta_var$class
meta_var
arg_class
arg_class
arg_class$class
arg_class
arg_class$class
arg_class %>% mutate(meta = class[1,])
arg_class %>% mutate(meta = class[1])
.Last.value$meta
arg_class
arg_class$class
arg_class %>% rowwise() %>% mutate(meta = class[1])
arg_class %>% rowwise() %>% mutate(meta = class[1,])
arg_class %>% rowwise() %>% mutate(meta = unlist(class[1,]))
